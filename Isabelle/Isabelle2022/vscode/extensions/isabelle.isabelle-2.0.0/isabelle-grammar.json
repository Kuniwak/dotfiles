{
  "name": "Isabelle",
  "scopeName": "source.isabelle",
  "fileTypes": ["thy"],
  "uuid": "4a7e4542-ab5b-4886-be4a-a1325e916f12",
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.block.isabelle",
          "begin": "\\(\\*",
          "patterns": [{ "include": "#comment" }],
          "end": "\\*\\)"
        }
      ]
    },
    "cartouche": {
      "patterns": [
        {
          "name": "string.quoted.other.multiline.isabelle",
          "begin": "(?:\\\\<open>|‹)",
          "patterns": [{ "include": "#cartouche" }],
          "end": "(?:\\\\<close>|›)"
        }
      ]
    }
  },
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#cartouche"
    },
    {
      "name": "keyword.control.isabelle",
      "match": "\\b(\\.|\\.\\.|ML|ML_command|ML_export|ML_file|ML_file_debug|ML_file_no_debug|ML_prf|ML_val|ROOTS_file|SML_export|SML_file|SML_file_debug|SML_file_no_debug|SML_import|\\\\\\<proof\\>|abbreviation|alias|also|apply|apply_end|attribute_setup|axiomatization|back|bibtex_file|bnf|bundle|by|chapter|chapter_definition|class|class_deps|codatatype|code_datatype|code_deps|code_identifier|code_monad|code_pred|code_printing|code_reflect|code_reserved|code_thms|coinductive|coinductive_set|compile_generated_files|consider|consts|context|copy_bnf|corollary|datatype|datatype_compat|declaration|declare|default_sort|defer|definition|done|experiment|export_code|export_generated_files|external_file|extract|extract_type|finally|find_consts|find_theorems|find_unused_assms|free_constructors|from|full_prf|fun|fun_cases|function|functor|generate_file|global_interpretation|have|help|hence|hide_class|hide_const|hide_fact|hide_type|include|including|inductive|inductive_cases|inductive_set|inductive_simps|instance|instantiation|interpret|interpretation|judgment|lemma|lemmas|let|lift_bnf|lift_definition|lifting_forget|lifting_update|local_setup|locale|locale_deps|method_setup|moreover|named_theorems|next|nitpick|nitpick_params|no_notation|no_syntax|no_translations|no_type_notation|nonterminal|notation|note|notepad|nunchaku|nunchaku_params|old_rep_datatype|oops|oracle|overloading|paragraph|parse_ast_translation|parse_translation|partial_function|prefer|prf|primcorec|primcorecursive|primrec|print_ML_antiquotations|print_abbrevs|print_antiquotations|print_ast_translation|print_attributes|print_bnfs|print_bundles|print_case_translations|print_cases|print_claset|print_classes|print_codeproc|print_codesetup|print_coercions|print_commands|print_context|print_definitions|print_defn_rules|print_facts|print_induct_rules|print_inductives|print_interps|print_locale|print_locales|print_methods|print_options|print_orders|print_quot_maps|print_quotconsts|print_quotients|print_quotientsQ3|print_quotmapsQ3|print_record|print_rules|print_simpset|print_state|print_statement|print_syntax|print_term_bindings|print_theorems|print_theory|print_trans_rules|print_translation|proof|prop|proposition|qed|quickcheck|quickcheck_generator|quickcheck_params|quotient_definition|quotient_type|realizability|realizers|record|scala_build_generated_files|schematic_goal|section|session|setup|setup_lifting|simproc_setup|sledgehammer|sledgehammer_params|smt_status|solve_direct|sorry|specification|subclass|subgoal|sublocale|subparagraph|subsection|subsubsection|supply|syntax|syntax_declaration|term|termination|text|text_raw|then|theorem|theory|thm|thm_deps|thm_oracles|thy_deps|translations|try|try0|txt|typ|type_alias|type_notation|type_synonym|typed_print_translation|typedecl|typedef|ultimately|unbundle|unfolding|unused_thms|using|value|values|welcome|with|write|\\{|\\})\\b"
    },
    {
      "name": "keyword.other.unit.isabelle",
      "match": "\\b(abbrevs|and|assumes|begin|binder|checking|class_instance|class_relation|code_module|constant|constrains|datatypes|defines|description|directories|document_files|document_theories|end|export_classpath|export_files|export_prefix|external_files|file|file_prefix|fixes|for|functions|global|if|imports|in|includes|infix|infixl|infixr|is|keywords|module_name|monos|morphisms|notes|obtains|open|opening|options|output|overloaded|parametric|pervasive|premises|private|qualified|rewrites|sessions|shows|structure|theories|type_class|type_constructor|unchecked|when|where)\\b"
    },
    {
      "name": "keyword.operator.isabelle",
      "match": "\\b(\\!|\\!\\!|%|\\(|\\)|\\+|,|/|:|::|;|\\<|\\<\\=|\\=|\\=\\=|\\=\\>|\\?|\\[|\\\\\\<comment\\>|\\\\\\<equiv\\>|\\\\\\<leftharpoondown\\>|\\\\\\<rightharpoonup\\>|\\\\\\<rightleftharpoons\\>|\\\\\\<subseteq\\>|\\]|\\||―|↽|⇀|⇌|≡|⊆)\\b"
    },
    {
      "name": "entity.name.type.isabelle",
      "match": "\\b(assume|case|define|fix|obtain|presume|show|thus)\\b"
    },
    {
      "name": "constant.numeric.isabelle",
      "match": "\\b\\d*\\.?\\d+\\b"
    },
    {
      "name": "string.quoted.double.isabelle",
      "begin": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.isabelle",
          "match": "\\\\[\\\"]|\\\\\\d\\d\\d"
        }
      ],
      "end": "\""
    },
    {
      "name": "string.quoted.backtick.isabelle",
      "begin": "`",
      "patterns": [
        {
          "name": "constant.character.escape.isabelle",
          "match": "\\\\[\\`]|\\\\\\d\\d\\d"
        }
      ],
      "end": "`"
    },
    {
      "name": "string.quoted.verbatim.isabelle",
      "begin": "\\{\\*",
      "patterns": [
        { "match": "[^*]+|\\*(?!\\})" }
      ],
      "end": "\\*\\}"
    }
  ]
}
